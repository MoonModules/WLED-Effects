/* green ripple reflections

   By: PixelBlaze

   Converted by: Andrew Tuline

   Date: Dec, 2021

   This code was adapted from a shared Pixelblaze pattern. For more information
   about creating patterns with Pixelblaze and the shared pattern library, see:

   PixelBlaze as found at https://electromage.com/

   PixelBlaze expressions: https://github.com/simap/pixelblaze/blob/master/README.expressions.md

   Getting started guide: https://www.bhencke.com/pixelblazegettingstarted

   Patterns: https://electromage.com/patterns


   Original code:

  PI10 = PI2*5
  PI6 = PI2*3

  export function beforeRender(delta) {
    t1 = time(.03)*PI2
    t2 = time(.05)*PI2
    t3 = time(.04)*PI2
  }

  export function render(index) {
    a = sin(index*PI10/pixelCount + t1)
    a = a*a
    b = sin(index*PI6/pixelCount - t2)
    c = triangle((index*3/pixelCount + 1 + sin(t3))/2 % 1)
    v = (a+b+c)/3
    v = v*v
    hsv(.3, a, v/2)
  }

*/





program green_ripple_reflections {

  PI2 =  6.28318
  PI6 =  PI2 * 3
  PI10 = PI2 * 5

  function renderFrame() {
    t1 = time(.03) * PI2
    t2 = time(.05) * PI2
    t3 = time(.04) * PI2
  }

  function renderLed(index) {
    a = sin(index * PI10 / ledCount + t1)
    a = a * a
    b = sin(index * PI6 / ledCount - t2)
    c = triangle((index * 3 / ledCount + 1 + sin(t3)) / 2 % 1)
    v = (a + b + c) / 3
    v = v * v
    leds[index] = hsv(.3 * 255, a * 255, v * 255)
  }
}